# Created by https://www.toptal.com/developers/gitignore/api/python
# Edit at https://www.toptal.com/developers/gitignore?templates=python

### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

### Python Patch ###
# Poetry local configuration file - https://python-poetry.org/docs/configuration/#local-configuration
poetry.toml

# ruff
.ruff_cache/

# LSP config files
pyrightconfig.json

# End of https://www.toptal.com/developers/gitignore/api/python
# Создано https://www.toptal.com/developers/gitignore/api/python # Редактировать по адресу https://www.toptal.com/developers/gitignore?templates=python. ### Питон ### # Байт-компилированные/оптимизированные/DLL-файлы __pycache__/ *.py[код] *$py.класс # Расширения C *.так # Распространение/упаковка .Питон строить/ развивающие яйца/ расстояние/ загрузки/ яйца/ .яйца/ библиотека/ lib64/ части/ сдист/ вар/ колеса/ поделиться /python-wheels/ *.egg-info/ .installed.cfg *.яйцо МАНИФЕСТ # PyInstaller # Обычно эти файлы пишутся скриптом Python из шаблона # перед тем, как PyInstaller соберет exe-файл, чтобы добавить в него дату/другую информацию. *.манифест *.spec # Журналы установщика пип-log.txt pip-delete-this-directory.txt # Отчеты о модульном тестировании/покрытии htmlcov/ .tox/ .nox/ .покрытие .покрытие.* .cache ностестс.xml покрытие.xml *.крышка *.py,обложка .гипотеза/ .pytest_cache/ крышка/ # Переводы *.mo *.горшок # Материалы Джанго: *.бревно local_settings.py db.sqlite3 db.sqlite3-журнал # Материал колбы: пример/ .webassets-кэш # Скромные вещи: .скрапи # Документация по Сфинксу документы/_build/ # Пибилдер .pybuilder/ цель/ # Блокнот Jupyter .ipynb_checkpoints # IPython профиль_default/ ipython_config.py # pyenv # Для библиотеки или пакета вы можете игнорировать эти файлы, поскольку код # предназначен для работы в нескольких средах; в противном случае проверьте их: # .python-версия # пипенв # Согласно pypa/pipenv#598, рекомендуется включить Pipfile.lock в систему контроля версий. # Однако в случае сотрудничества, если имеются зависимости или зависимости, специфичные для платформы # не имея кросс-платформенной поддержки, Pipenv может устанавливать зависимости, которые не работают или не работают # устанавливаем все необходимые зависимости. #Pipfile.lock # поэзия # Как и в случае с Pipfile.lock, обычно рекомендуется включать поэтику.lock в систему контроля версий. # Это особенно рекомендуется для двоичных пакетов, чтобы обеспечить воспроизводимость и более того. # обычно игнорируется для библиотек. # https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control #поэзия.lock # пдм # Как и в случае с Pipfile.lock, обычно рекомендуется включать pdm.lock в систему контроля версий. #pdm.lock # pdm хранит конфигурации всего проекта в .pdm.toml, но его не рекомендуется включать # в системе контроля версий. # https://pdm.fming.dev/#use-with-ide .pdm.toml № ПКП 582; используется, например, github.com/David-OConnor/pyflow и github.com/pdm-project/pdm __pypackages__/ # Сельдерей сельдерейбит-расписание сельдерейбит.pid # файлы, обработанные SageMath *.sage.py # Среды .env .venv окр./ венв/ ЕНВ/ env.bak/ venv.bak/ # Настройки проекта Spyder .spyderproject .spyproject # Настройки проекта веревки .ropeproject # документация mkdocs /сайт # мойпи .mypy_cache/ .dmypy.json dmypy.json # Проверка типа костра .pyre/ # анализатор статических типов pytype .pytype/ # Символы отладки Cython cython_debug/ # Пичарм # Специальный шаблон JetBrains хранится в отдельном JetBrains.gitignore, который может # можно найти по адресу https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore. # и может быть добавлен в глобальный gitignore или объединен с этим файлом. Для более ядерного # вариант (не рекомендуется), вы можете раскомментировать следующее, чтобы игнорировать всю папку идей. #.идея/ ### Патч Python ### # Локальный файл конфигурации Poetry — https://python-poetry.org/docs/configuration/#local-configuration поэзия.toml #ерш .ruff_cache/ # Конфигурационные файлы LSP pirightconfig.json # Конец https://www.toptal.com/developers/gitignore/api/python
Translated from: ⁨English⁩ (Google)

mj_results/*